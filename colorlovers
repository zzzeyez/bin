#!/usr/bin/env bash
#
# author: daniel neeman (@zzzeyez)
#
# grabs palettes from colorlovers.com
# and uses `wal` to apply them to system
#
# requires `wal` and `jq`

lightordark="-l"
background=""
badge="/tmp/colorlovers.png"

removeold() {
	rm "${HOME}"/.cache/wal/schemes/_tmp*
}

search() {
	keyword="$1"
}

seturl() {
	entry="$((RANDOM%50))"
	colorloversurl="http://www.colourlovers.com/api/palettes/top&format=json&numResults=50&keywords=$keyword"
	colorlovers=$(curl -s "$colorloversurl")
	image=$(echo "$colorlovers" | jq ".[$entry] | .imageUrl" | tr -d '"')
	title=$(echo "$colorlovers" | jq ".[$entry] | .title" | tr -d '"')
}

bgcolor() {
	background="-b $1"
}

dark() {
	lightordark=""
}

convertwal() {
	convert "$image" "$badge"
	convert -size 228x161 gradient: /tmp/gradient.png
	composite /tmp/gradient.png -compose Hard_light /tmp/colorlovers.png \
		/tmp/wal.png
}

setwal() {
	wal -i /tmp/wal.png -o wal-set --saturate 0.3 -n $background $lightordark
}

help() {
	echo "search: -s (keyword)"
	echo "background color: -b (hex value)"
	echo "darkmode: -d"
	echo "help: -h"
	exit
}

multiple() {
	while getopts s:b:dh opt; do
		case $opt in
			s)  
				search "$OPTARG"
			;;
			b)
				bgcolor "$OPTARG"
			;;
			d)
				dark
			;;
			h)
				help
			;;
			*)
				help
			;;
		esac
	done
}

if [ "$#" -ne 0 ]; then
	multiple "$@"
	removeold
	seturl
	convertwal &&
	setwal &&
	echo "$colorloversurl"
	notify-send -i "$badge" -m "$title"
else
	removeold
	seturl
	convertwal &&
	setwal &&
	notify-send -i "$badge" -m "$title"
fi
