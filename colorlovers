#!/usr/bin/env bash
#
# author: daniel neeman (@zzzeyez)
#
# grabs palettes from colorlovers.com
# and uses `wal` to apply them to system
#
# requires `wal` and `jq`

lightmode=""
background=""
badge="/tmp/colorlovers.png"

removeold() {
	rm "${HOME}"/.cache/wal/schemes/_tmp*
}

search() {
	keyword="$1"
}

notifyon() {
	notifications="true"
}

lightmode() {
	lightordark="-l"
}

bgcolor() {
	background="-b $1"
}

seturl() {
	entry="$((RANDOM%50))"
	colorloversurl="http://www.colourlovers.com/api/palettes/top&format=json&numResults=50&keywords=$keyword"
	colorlovers=$(curl -s "$colorloversurl")
	image=$(echo "$colorlovers" | jq ".[$entry] | .imageUrl" | tr -d '"')
	title=$(echo "$colorlovers" | jq ".[$entry] | .title" | tr -d '"')
}

convertwal() {
	convert "$image" "$badge"
	convert -size 228x161 gradient: /tmp/gradient.png
	composite /tmp/gradient.png -compose Hard_light /tmp/colorlovers.png /tmp/wal.png
}

setwal() {
	wal -i /tmp/wal.png -o wal-set -n $background $lightordark
}

notify() {
	if [[ $notifications ]]; then
		notify-send -i "$badge" -m "$title"
	fi
}

variables() {
	echo "api url: $colorloversurl"
	echo "palette title: $title"
	echo "palette badge url: $image"
}

help() {
	printf "\navailable flags: \n"
	printf "search: -s (keyword) \n"
	printf "background color: -b (hex value) \n"
	printf "light mode: -l \n"
	printf "notify when finished: -n \n"
	printf "echo api url, palette title, palette badge url \n"
	printf "help: -h \n"
	exit
}

multiple() {
	while getopts s:b:lnxh opt; do
		case $opt in
			s)  
			search "$OPTARG"
			;;
			b)
			bgcolor "$OPTARG"
			;;
			l)
			lightmode
			;;
			n)
			notifyon
			;;
			x)
			variables
			;;
			h)
			help
			;;
			*)
			help
			;;
		esac
	done
}

if [ "$#" -ne 0 ]; then
	multiple "$@"
	removeold
	seturl
	convertwal
	setwal
	notify
else
	removeold
	seturl
	convertwal
	setwal
	notify
fi
