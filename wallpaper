#!/usr/bin/env bash
#
# author: daniel neemann (@zzzeyez)
#
# sets wallpaper from `wal` color number,
# image address or hex value
#
# if this messes up Finder then run this:
# 

. "$HOME/.cache/wal/colors.sh"

image="/tmp/wallpaper.png"
image2="/tmp/solidbg2.png"
notify="on"

exists () {
    type "$1" &> /dev/null ;
}

help() {
	printf "available inputs: Wal color number, image address, directory, hex value \n"
	printf "so for example: \n"
	printf "wallpaper 8 \n"
	printf "wallpaper ./smiledog.jpg \n"
	printf "wallpaper ~/wallpapers/ \n"
	printf "wallpaper dddddd \n \n"
	printf "or you can save the current wallpaper: \n"
}

single() {
	path="$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
}

random() {
	dir="$1"
	n_files=`/bin/ls -1 "$dir" | wc -l | cut -f1`
	rand_num=`awk "BEGIN{srand();print int($n_files * rand()) + 1;}"`
	file=`/bin/ls -1 "$dir" | sed -ne "${rand_num}p"`
	path=`cd $dir && echo "$PWD/$file"` # Converts to full path
}

store() {
	if test -e $path -a $(file -b --mime-type $path) = "image/png"; then
		cp "$path" "$image"
	else
		convert "$path" "$image"
	fi
}

set_wallpaper() {
	METHOD=$(sw_vers -productVersion | awk -F'.' '{ if ($1 < 10 || $2 < 9) \
		{ print "osascript" } else{ print "sqlite3"  } }')
	case $METHOD in
        osascript)
		osascript -e "tell application \"Finder\" to set desktop picture \
			to POSIX file \"${1}\""
	;;
	sqlite3)
		current_path=$(sqlite3 -noheader -batch \
			${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
			'select value from data limit 1')
		if [[ "$current_path" != "$1" ]]; then
			sqlite3 ${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
				"update data set value = '${1}'" && killall Dock
		fi
	;;
	*)
		echo "error setting wallpaper" && exit 1
	;;
	esac
}

notify() {
	notify="$(which notify-send)"
	if [ -x "$notify" ] ; then
		if [[ "$path" ]] ; then
			notify-send -i "$path" -m "wallpaper set as $path"
		else
			notify-send -i "$image" -m "wallpaper set as $color"
		fi
	fi
}

case "$1" in
	-h|-H|--help) help && exit ;;
	-x) rm ~/Library/Application\ Support/Dock/desktoppicture.db ;;
	0) convert -size 5x5 xc:"$color0" "$image" & color="$color0" ;;
	1) convert -size 5x5 xc:"$color1" "$image" & color="$color1" ;;
	2) convert -size 5x5 xc:"$color2" "$image" & color="$color1" ;;
	3) convert -size 5x5 xc:"$color3" "$image" & color="$color1" ;;
	4) convert -size 5x5 xc:"$color4" "$image" & color="$color1" ;;
	5) convert -size 5x5 xc:"$color5" "$image" & color="$color1" ;;
	6) convert -size 5x5 xc:"$color6" "$image" & color="$color1" ;;
	7) convert -size 5x5 xc:"$color7" "$image" & color="$color1" ;;
	8) convert -size 5x5 xc:"$color8" "$image" & color="$color1" ;;
	15) convert -size 5x5 xc:"$color15" "$image" & color="$color1" ;;
	*.*) single "$1" ;;
	*) random "$1" ;;
esac

# osascript does not allow you to repeatedly set as same image
# so we generate an additional image
if [[ -z "$path" ]] ; then
	if [[ -f "$image2" ]] ; then
		convert -size 5x5 xc:"#aaaaaa" "$image2"
	fi
	notify & set_wallpaper "$image2"
	set_wallpaper "$image"
else
	notify & set_wallpaper "$path" & store
fi
