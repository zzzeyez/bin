#!/usr/bin/env bash
#
# author: daniel neemann (@zzzeyez)
#
# sets wallpaper from `wal` color number,
# image address or hex value


. "$HOME/.cache/wal/colors.sh"

image="/tmp/solidbg.png"
image2="/tmp/solidbg2.png"

help() {
	printf "available inputs: Wal color number, image address, hex value \n"
	printf "so for example: \n"
	printf "wallpaper 8 \n"
	printf "wallpaper ./smiledog.jpg \n"
	printf "wallpaper dddddd \n \n"
	printf "or you can save the current wallpaper: \n"
	printf -- "--save (filename) (directory) \n"
	printf "(arguments are optional) \n"
}

set_wallpaper() {
	METHOD=$(sw_vers -productVersion | awk -F'.' '{ if ($1 < 10 || $2 < 9) \
		{ print "osascript" } else{ print "sqlite3"  } }')
	case $METHOD in
        osascript)
		osascript -e "tell application \"Finder\" to set desktop picture \
			to POSIX file \"${1}\""
	;;
	sqlite3)
		current_path=$(sqlite3 -noheader -batch \
			${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
			'select value from data limit 1')
		if [[ "$current_path" != "$1" ]]; then
			sqlite3 ${HOME}/Library/Application\ Support/Dock/desktoppicture.db \
				"update data set value = '${1}'" && killall Dock
		fi
	;;
	*)
		echo "error setting wallpaper" && exit 1
	;;
	esac
}

save() {
	savedir="$3"
	savename="$2"
	savefile="${savedir:-${HOME}/Downloads}/${savename:-wallpaper}/"
	if [[ -e $savefile.png ]]
	then
		i=0
		while [[ -e $savefile-$i.png ]] 
		do
	        	(( i++ ))
	    	done
	savefile=$savefile-$i
	fi
	cp "$image" "$savefile.png" &&
	echo "$savefile.png saved"
	notify-send -m "saved $savefile.png" -i "$savefile.png"
	exit
}

case "$1" in
	-h|-H|--help) help && exit ;;
	-s|--save) save "$@" ;;
	0) convert -size 5x5 xc:"$color0" "$image" ;;
	1) convert -size 5x5 xc:"$color1" "$image" ;;
	2) convert -size 5x5 xc:"$color2" "$image" ;;
	3) convert -size 5x5 xc:"$color3" "$image" ;;
	4) convert -size 5x5 xc:"$color4" "$image" ;;
	5) convert -size 5x5 xc:"$color5" "$image" ;;
	6) convert -size 5x5 xc:"$color6" "$image" ;;
	7) convert -size 5x5 xc:"$color7" "$image" ;;
	8) convert -size 5x5 xc:"$color8" "$image" ;;
	15) convert -size 5x5 xc:"$color15" "$image" ;;
	*.*) cp "$1" "$image" ;;
	*) convert -size 5x5 xc:\#"$1" "$image" ;;
esac

# osascript does not allow you to repeatedly set as same image
# so we generate an additional image
convert -size 5x5 xc:"$color0" "$image2" &&
set_wallpaper "$image2" &&
set_wallpaper "$image"

