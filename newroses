#!/usr/bin/env bash
#
# author: daniel neemann (@zzzeyez)
#
# grabs image from Unsplash and sets as wallpaper
#
# requires `wal`, `imagemagick` and `jq`
#
# requires API key from https://unsplash.com/developers
# add the API key to the end of line 18,
# uncomment line 18 and then comment line 14

source "${HOME}/.config/api_keys"
lightordark=""
background=""

getapi() {
#	unsplashapi=
	if [[ -z $unsplashapi ]]
	then
		printf \
		"\nREQUIREMENT: GET YOUR OWN API KEY AT: \n \n"
		printf "https://unsplash.com/developers \n \n"
		printf "and then use it like so: \n \n"
		printf \
		"touch \"\${HOME}/.config/api_keys\" && "
		printf \
		"echo \"unsplashapi=YOUR_API_KEY > \${HOME}/.config/api_keys\" \n \n"
		printf \
		"replace \"YOUR_API_KEY\" with your api key \n \n"
		printf \
		"(or you can manually add it to line 18 of this script) \n"
		exit
	fi	
}

bgcolor() {
	background="-b $1"
}

lightmode() {
	lightordark="-l"
}

setwallpaper() {
	wallpaperonly="true"
}

notifyon() {
	notifications="true"
}

searchterm() {
	keyword="$1"
}

search() {
	entry="$((RANDOM%20))"
	unsplashurl="https://api.unsplash.com/search/photos?client_id=$unsplashapi&query=$keyword&per_page=20"
	searchjson=$(curl -s "$unsplashurl")
	image="$(echo "$searchjson" | jq "{results} | .[] | .[$entry] | {urls} | .[] | {raw} | .[]" | tr -d '"')&w=1400&dpi=2"
	username="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .name" | tr -d '"')"
	userscreenname="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .username" | tr -d '"')"
	userurl="$(echo "$searchjson" | \
		jq ".results | .[$entry] .user .links .self" | tr -d '"')?utm_source=newroses&utm_medium=referral"
	photourl="$(echo "$searchjson" | \
		jq ".results | .[$entry] .links .html" | tr -d '"')?utm_source=newroses&utm_medium=referral"
}

featured() {
	entry="$((RANDOM%20))"
	unsplashurl="https://api.unsplash.com/photos?client_id=$unsplashapi&featured&per_page=20"
	featuredjson=$(curl -s "$unsplashurl")
	image="$(echo "$featuredjson" | \
		jq ".[$entry] | .urls | .full" | tr -d '"')"
	username="$(echo "$featuredjson" | \
		jq ".[$entry] .user .name" | tr -d '"')"
	userscreenname="$(echo "$featuredjson" | \
		jq ".[$entry] .user .username" | tr -d '"')"
	userurl="$(echo "$featuredjson" | \
		jq ".[$entry] .user .links .self" | tr -d '"')?utm_source=newroses&utm_medium=referral"
	photourl="$(echo "$featuredjson" | \
		jq ".[$entry] .links .html" | tr -d '"')?utm_source=newroses&utm_medium=referral"
}

setwal() {
	if [[ -z $wallpaperonly ]]
	then
		rm "${HOME}"/.cache/wal/schemes/_tmp*
		convert "$image" /tmp/wallpaper.jpg &&
		wal -i /tmp/wallpaper.jpg -o wal-set -q $background $lightordark
	else
		convert "$image" /tmp/wallpaper.jpg &&
		wallpaper /tmp/wallpaper.jpg	
	fi
}

notify() {
	if [[ $notifications ]]; then
		notify-send -i /tmp/wallpaper.jpg -m "photo by $username ($userscreenname)"
	fi
}

credits() {
	echo "wallpaper set as:"
	echo "$photourl"
	echo "photo by $username ($userscreenname)"
	echo "$userurl"
	echo "photo supplied by https://unsplash.com/"
}

variables() {
	echo "image url: $image"
	echo "unsplash api key: $unsplashapi"
	echo "unsplash api url: $unsplashurl"
	echo "search keyword: $keyword"
	echo "entry number: $entry"
	echo "photo page: $photourl"
	echo "author: $username ( $userscreenname )"
	echo "author's profile: $userurl"
	echo "photo supplied by https://unsplash.com/"
	exit
}

help() {
	printf "\navailable flags: \n"
	printf "search: -s (keyword) \n"
	printf "featured: -f \n" 
	printf "background -b (hex value) \n"
	printf "light mode: -l \n"
	printf \
	"only set wallpaper (no system palette): -w \n" 
	printf "notify when done: -n \n"
	printf "echo api url, image url, search keyword, random entry number \n"
	exit
}

flags() {
	while getopts hfb:lws:nx opt; do
		case $opt in
			h)
			help
			;;
			f)
			getapi
			featured
			;;
			b)
			bgcolor "$OPTARG"
			;;
			l)
			lightmode
			;;
			w)
			setwallpaper
			;;
			s)
			getapi
			searchterm "$OPTARG"
			search
			;;
			n)
			notifyon
			;;
			x)
			variables
			;;
			*)
			help
			;;
		esac
	done
}

if [ "$#" -ne 0 ]; then
	flags "$@"
	setwal
	notify
	credits
else
	featured
	setwal
	notify
	credits
fi
